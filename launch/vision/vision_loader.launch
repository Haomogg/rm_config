<launch>
    <arg name="robot_type" default="$(env ROBOT_TYPE)" doc="Robot type [standard, hero, engineer]"/> <!--动态传参-->
    <arg name="camera_type" default="$(env CAMERA_TYPE)" doc="Camera type"/>
    <arg name="camera_name" default="camera"/>
    <rosparam file="$(find armor_processor)/config/processor_config.yaml" command="load"/> <!--从yaml文件导入参数-->

    <node pkg="nodelet" type="nodelet" name="Processor"
          args="load rm_digtialimg_proc/Processor vision_nodelet" respawn="true"> <!--指定ros节点；respawn="true"：如果节点退出，则自动重启-->
                                                                                  <!--args="load rm_digtialimg_proc/Processor vision_nodelet"：表示加载rm_digtialimg_proc/Processor和vision_nodelet这两个类-->
        <rosparam file="$(find rm_digtialimg_proc)/config/weibull_coefficient.yaml" command="load"/>
        <rosparam file="$(find rm_digtialimg_proc)/config/make_dataset.yaml" command="load"/> <!--录数据集-->
        <rosparam file="$(find rm_digtialimg_proc)/config/armor_coefficient.yaml" command="load"/> <!--灯条识别+数字分类-->
        <rosparam file="$(find rm_digtialimg_proc)/config/preprocess_coefficient.yaml" command="load"/> <!--图像预处理-->
        <remap from="/processor/result_msg" to="/processor/result_msg"/> <!--话题重命名-->
        <remap from="debug_image" to="debug_image"/>
        <remap from="/galaxy_camera/image_raw" to="/$(arg camera_type)/$(arg camera_name)/image_raw"/>
    </node>

    <node pkg="rm_pose_solver" type="pose_solver_node" name="pose_solver_node" output="screen" respawn="true">
        <rosparam file="$(find rm_pose_solver)/config/pose_solver_config.yaml" command="load"/> <!--判断四个角点的角度 进行顺序的重映射-->
        <remap from="/processor/result_msg" to="/processor/result_msg"/>
        <remap from="/galaxy_camera/camera_info" to="/$(arg camera_type)/$(arg camera_name)/camera_info"/>
        <remap from="/detection" to="/detection"/>
    </node>

     <node name="armor_processor" pkg="armor_processor" type="armor_processor" respawn="true"/>

<!--   <node pkg="nodelet" type="nodelet" name="forecast"-->
<!--       args="load rm_forecast/Forecast_Node vision_nodelet" respawn="true">-->
<!--       <rosparam file="$(find rm_forecast)/config/forecast.yaml" command="load" />-->
<!--       <rosparam file="$(find rm_forecast)/config/camera.yaml" command="load" />-->
<!--      <remap from="/hk_camera/image_raw" to="/$(arg camera_type)/$(arg camera_name)/image_raw"/>-->
<!--   </node>-->
    <!--  预测  -->
    <node pkg="nodelet" type="nodelet" name="forecast"
            args="load fft_forecast/Forecast_Node vision_nodelet" respawn="true">
            <rosparam file="$(find fft_forecast)/config/forecast.yaml" command="load" /> <!--卡尔曼滤波+追踪参数-->
            <rosparam file="$(find fft_forecast)/config/camera.yaml" command="load" />
           <remap from="/hk_camera/image_raw" to="/$(arg camera_type)/$(arg camera_name)/image_raw"/>
    </node>

<!--     <include file="$(find buff_vision)/launch/buff_nodelet.launch"/>-->

    <include file="$(find windmill)/launch/windmill.launch"/>
</launch>
